{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrkno\\\\OneDrive\\\\Desktop\\\\GitHub\\\\Guess-the-Ticker\\\\src\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport dictionary from './dictionary';\nimport dictionary2 from './dictionary2';\nimport Swal from 'sweetalert2';\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [gameMode, setGameMode] = useState('');\n  const [ticker, setTicker] = useState('');\n  const [nameAnswer, setNameAnswer] = useState('');\n  const [companyAnswer, setCompanyAnswer] = useState('');\n  const [score, setScore] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [highScores, setHighScores] = useState({\n    name: {\n      initials: '',\n      score: 0\n    },\n    company: {\n      initials: '',\n      score: 0\n    },\n    both: {\n      initials: '',\n      score: 0\n    },\n    nameHardMode: {\n      initials: '',\n      score: 0\n    },\n    companyHardMode: {\n      initials: '',\n      score: 0\n    },\n    bothHardMode: {\n      initials: '',\n      score: 0\n    }\n  });\n  const [hardMode, setHardMode] = useState(false);\n  const [alerts, setAlerts] = useState([]);\n  const dictionaryToUse = gameMode === 'name' || gameMode === 'company' || gameMode === 'both' ? dictionary : hardMode ? dictionary2 : dictionary;\n  const myAlert = useCallback(message => {\n    setAlerts(existingAlerts => {\n      // add new alert to the beginning of the array\n      const newAlerts = [message, ...existingAlerts];\n      setTimeout(() => {\n        // remove the alert after 5 seconds\n        setAlerts(updatedAlerts => updatedAlerts.filter(alert => alert !== message));\n      }, 5000);\n      return newAlerts;\n    });\n  }, []);\n  useEffect(() => {\n    let intervalId;\n    if (gameStarted) {\n      intervalId = setInterval(() => {\n        setTimeLeft(prevTime => prevTime - 1);\n      }, 1000);\n    }\n    return () => clearInterval(intervalId);\n  }, [gameStarted]);\n  const startGame = () => {\n    setGameStarted(true);\n    const tickers = Object.keys(dictionaryToUse);\n    const randomIndex = Math.floor(Math.random() * tickers.length);\n    const randomTicker = tickers[randomIndex];\n    setTicker(randomTicker);\n  };\n  const handleNameAnswerChange = e => {\n    setNameAnswer(e.target.value);\n  };\n  const handleCompanyAnswerChange = e => {\n    setCompanyAnswer(e.target.value);\n  };\n  const handleNameAnswerSubmit = e => {\n    e.preventDefault();\n    const {\n      symbol,\n      name\n    } = dictionaryToUse[ticker];\n    if (nameAnswer.toLowerCase() === symbol.toLowerCase()) {\n      setScore(prevScore => prevScore + 1);\n      myAlert(`Correct!`);\n    } else {\n      myAlert(`Incorrect. The ticker for ${name} is ${symbol}.`);\n    }\n    setNameAnswer('');\n    const tickers = Object.keys(dictionaryToUse);\n    const randomIndex = Math.floor(Math.random() * tickers.length);\n    const randomTicker = tickers[randomIndex];\n    setTicker(randomTicker);\n  };\n  const handleCompanyAnswerSubmit = e => {\n    e.preventDefault();\n    const {\n      symbol,\n      company\n    } = dictionaryToUse[ticker];\n    if (companyAnswer.toLowerCase() === symbol.toLowerCase()) {\n      setScore(prevScore => prevScore + 1);\n      myAlert(`Correct!`);\n    } else {\n      myAlert(`Incorrect. The ticker for ${company} is ${symbol}.`);\n    }\n    setCompanyAnswer('');\n    const tickers = Object.keys(dictionaryToUse);\n    const randomIndex = Math.floor(Math.random() * tickers.length);\n    const randomTicker = tickers[randomIndex];\n    setTicker(randomTicker);\n  };\n  useEffect(() => {\n    const storedHighScores = JSON.parse(localStorage.getItem('highScores'));\n    if (storedHighScores) {\n      setHighScores(storedHighScores);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('highScores', JSON.stringify(highScores));\n  }, [highScores, gameMode]);\n  const updateHighScore = useCallback(() => {\n    if (score > highScores[gameMode].score) {\n      Swal.fire({\n        title: 'Congratulations!',\n        html: `<h3>You got a new high score!</h3><h2>${score} points!</h2>`,\n        input: 'text',\n        icon: 'success',\n        inputPlaceholder: 'Enter your name or initials',\n        confirmButtonText: 'Submit',\n        confirmButtonColor: 'rgb(173, 123, 233)',\n        inputAttributes: {\n          autocapitalize: 'off',\n          autocorrect: 'off',\n          autocomplete: 'off'\n        },\n        showCancelButton: false,\n        inputValidator: value => {\n          if (!value) {\n            return 'Please enter your name or initials in the box';\n          }\n        },\n        background: 'rgba(0, 0, 0, 0.8)',\n        backdrop: `\n          rgba(0,0,123,0.4)\n        `,\n        customClass: {\n          title: 'swal-title',\n          confirmButton: 'swal-button',\n          input: 'swal-input',\n          validationMessage: 'swal-validation-message'\n        }\n      }).then(result => {\n        if (result.isConfirmed) {\n          const initials = result.value;\n          setHighScores(prevHighScores => ({\n            ...prevHighScores,\n            [gameMode]: {\n              initials,\n              score\n            }\n          }));\n        }\n      });\n    } else {\n      // Display the score using Swal.fire()\n      Swal.fire({\n        title: 'Good Try!',\n        html: `<h3>Your final score is:</h3><h2>${score} points...</h2>`,\n        icon: 'info',\n        confirmButtonText: 'OK',\n        confirmButtonColor: 'rgb(62, 84, 172)',\n        allowOutsideClick: false,\n        allowEscapeKey: true,\n        allowEnterKey: false,\n        showLoaderOnConfirm: true,\n        preConfirm: () => {\n          return new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n            }, 250); // Add a short delay before closing the alert to give the user a chance to read the message\n          });\n        },\n\n        background: 'rgba(0, 0, 0, 0.8)',\n        backdrop: `\n          rgba(0,0,123,0.4)\n        `,\n        customClass: {\n          title: 'swal-title',\n          confirmButton: 'swal-button'\n        }\n      });\n    }\n  }, [score, gameMode, highScores]);\n  useEffect(() => {\n    const endGame = () => {\n      setGameStarted(false);\n      updateHighScore();\n      setScore(0);\n      setTimeLeft(60);\n      setTicker('');\n      setNameAnswer('');\n      setCompanyAnswer('');\n    };\n    if (timeLeft === 0 && ticker !== '') {\n      endGame();\n    }\n  }, [timeLeft, score, setGameStarted, setTimeLeft, setTicker, setNameAnswer, setCompanyAnswer, ticker, gameMode, updateHighScore]);\n  const HighScores = () => {\n    const highScoresList = [{\n      name: highScores.name,\n      mode: 'Name'\n    }, {\n      name: highScores.nameHardMode,\n      mode: 'Name (Hard)'\n    }, {\n      name: highScores.company,\n      mode: 'Company'\n    }, {\n      name: highScores.companyHardMode,\n      mode: 'Company (Hard)'\n    }, {\n      name: highScores.both,\n      mode: 'Both'\n    }, {\n      name: highScores.bothHardMode,\n      mode: 'Both (Hard)'\n    }];\n\n    // Sort high scores in descending order\n    highScoresList.sort((a, b) => {\n      var _b$name, _a$name;\n      return ((_b$name = b.name) === null || _b$name === void 0 ? void 0 : _b$name.score) - ((_a$name = a.name) === null || _a$name === void 0 ? void 0 : _a$name.score);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"high-scores\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"High Scores:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), highScoresList.map(score => {\n        var _score$name;\n        if (((_score$name = score.name) === null || _score$name === void 0 ? void 0 : _score$name.score) > 0) {\n          var _score$name2, _score$name3;\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [score.mode, \" \\u2014 \", `${(_score$name2 = score.name) === null || _score$name2 === void 0 ? void 0 : _score$name2.initials} â€” Score: ${(_score$name3 = score.name) === null || _score$name3 === void 0 ? void 0 : _score$name3.score}`]\n          }, score.mode, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this);\n        }\n        return null;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this);\n  };\n  const renderGameModeSelect = () => {\n    const handleHardModeChange = e => {\n      setHardMode(e.target.checked);\n      if (gameMode.includes('HardMode')) {\n        myAlert('If not properly loading... Please reload the page to select a Game Mode.');\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Guess the Ticker!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"We'll give you the name and/or the company of the coin. Can you guess its Ticker symbol?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Select a GameMode Below!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mode-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: gameMode === 'name' ? 'selected' : '',\n          onClick: () => setGameMode('name'),\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: gameMode === 'company' ? 'selected' : '',\n          onClick: () => setGameMode('company'),\n          children: \"Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: gameMode === 'both' ? 'selected' : '',\n          onClick: () => setGameMode('both'),\n          children: \"Both\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 9\n        }, this), hardMode && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: gameMode === 'nameHardMode' ? 'selected' : '',\n            onClick: () => setGameMode('nameHardMode'),\n            children: \"Name (Hard)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: gameMode === 'companyHardMode' ? 'selected' : '',\n            onClick: () => setGameMode('companyHardMode'),\n            children: \"Company (Hard)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: gameMode === 'bothHardMode' ? 'selected' : '',\n            onClick: () => setGameMode('bothHardMode'),\n            children: \"Both (Hard)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hard-mode\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"hardMode\",\n          checked: hardMode,\n          onChange: handleHardModeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"hardMode\",\n          children: \"Too Easy?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-button\",\n        onClick: startGame,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 5\n    }, this);\n  };\n  const renderGame = () => {\n    if (!gameMode) {\n      return /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Please reload the page and select a GameMode!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 16\n      }, this);\n    }\n    const dictionaryEntry = dictionaryToUse[ticker];\n    const {\n      name,\n      company\n    } = dictionaryEntry;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Guess the Ticker!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), gameMode === 'name' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"GameMode: Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: dictionaryEntry.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNameAnswerSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"answer...\",\n            value: nameAnswer,\n            onChange: handleNameAnswerChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true) : gameMode === 'company' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"GameMode: Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: dictionaryEntry.company\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCompanyAnswerSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"answer...\",\n            value: companyAnswer,\n            onChange: handleCompanyAnswerChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true) : gameMode === 'both' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"GameMode: Both\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 5\n        }, this), name.toLowerCase() === company.toLowerCase() ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Name&Company:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Name/Company:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [name, \" / \", company]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 9\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNameAnswerSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"answer...\",\n            value: nameAnswer,\n            onChange: handleNameAnswerChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true) : hardMode && gameMode === 'nameHardMode' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"GameMode: Name (Hard)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: dictionary2[ticker].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNameAnswerSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"answer...\",\n            value: nameAnswer,\n            onChange: handleNameAnswerChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true) : hardMode && gameMode === 'companyHardMode' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"GameMode: Company (Hard)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: dictionary2[ticker].company\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCompanyAnswerSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"answer...\",\n            value: companyAnswer,\n            onChange: handleCompanyAnswerChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true) : hardMode && gameMode === 'bothHardMode' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"GameMode: Both (Hard)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 5\n        }, this), dictionary2[ticker].name.toLowerCase() === dictionary2[ticker].company.toLowerCase() ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Name&Company:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: dictionary2[ticker].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Name/Company:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [dictionary2[ticker].name, \" / \", dictionary2[ticker].company]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 9\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNameAnswerSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"answer...\",\n            value: nameAnswer,\n            onChange: handleNameAnswerChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true) : null, gameStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Points: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time Left: \", timeLeft]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 11\n      }, this) : null, alerts.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-alert\",\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 7\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: gameStarted ? \"game-going\" : \"\",\n    children: [gameStarted ? renderGame() : renderGameModeSelect(), /*#__PURE__*/_jsxDEV(HighScores, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 441,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"QiVFeiSZkViNpDkij/TucvPaFrU=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","dictionary","dictionary2","Swal","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","gameMode","setGameMode","ticker","setTicker","nameAnswer","setNameAnswer","companyAnswer","setCompanyAnswer","score","setScore","timeLeft","setTimeLeft","gameStarted","setGameStarted","highScores","setHighScores","name","initials","company","both","nameHardMode","companyHardMode","bothHardMode","hardMode","setHardMode","alerts","setAlerts","dictionaryToUse","myAlert","message","existingAlerts","newAlerts","setTimeout","updatedAlerts","filter","alert","intervalId","setInterval","prevTime","clearInterval","startGame","tickers","Object","keys","randomIndex","Math","floor","random","length","randomTicker","handleNameAnswerChange","e","target","value","handleCompanyAnswerChange","handleNameAnswerSubmit","preventDefault","symbol","toLowerCase","prevScore","handleCompanyAnswerSubmit","storedHighScores","JSON","parse","localStorage","getItem","setItem","stringify","updateHighScore","fire","title","html","input","icon","inputPlaceholder","confirmButtonText","confirmButtonColor","inputAttributes","autocapitalize","autocorrect","autocomplete","showCancelButton","inputValidator","background","backdrop","customClass","confirmButton","validationMessage","then","result","isConfirmed","prevHighScores","allowOutsideClick","allowEscapeKey","allowEnterKey","showLoaderOnConfirm","preConfirm","Promise","resolve","endGame","HighScores","highScoresList","mode","sort","a","b","_b$name","_a$name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_score$name","_score$name2","_score$name3","renderGameModeSelect","handleHardModeChange","checked","includes","onClick","type","id","onChange","htmlFor","renderGame","dictionaryEntry","onSubmit","placeholder","index","_c","$RefreshReg$"],"sources":["C:/Users/mrkno/OneDrive/Desktop/GitHub/Guess-the-Ticker/src/Game.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport dictionary from './dictionary';\r\nimport dictionary2 from './dictionary2';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nimport './Game.css';\r\n\r\nconst Game = () => {\r\n  const [gameMode, setGameMode] = useState('');\r\n  const [ticker, setTicker] = useState('');\r\n  const [nameAnswer, setNameAnswer] = useState('');\r\n  const [companyAnswer, setCompanyAnswer] = useState('');\r\n  const [score, setScore] = useState(0);\r\n  const [timeLeft, setTimeLeft] = useState(60);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [highScores, setHighScores] = useState({\r\n    name: { initials: '', score: 0 },\r\n    company: { initials: '', score: 0 },\r\n    both: { initials: '', score: 0 },\r\n    nameHardMode: { initials: '', score: 0 },\r\n    companyHardMode: { initials: '', score: 0 },\r\n    bothHardMode: { initials: '', score: 0 },\r\n  });\r\n  const [hardMode, setHardMode] = useState(false);\r\n  const [alerts, setAlerts] = useState([]);\r\n\r\n  \r\n\r\n  const dictionaryToUse = (gameMode === 'name' || gameMode === 'company' || gameMode === 'both') ? dictionary : (hardMode ? dictionary2 : dictionary);\r\n\r\n\r\n  const myAlert = useCallback((message) => {\r\n    setAlerts((existingAlerts) => {\r\n      // add new alert to the beginning of the array\r\n      const newAlerts = [message, ...existingAlerts];\r\n      setTimeout(() => {\r\n        // remove the alert after 5 seconds\r\n        setAlerts((updatedAlerts) => updatedAlerts.filter((alert) => alert !== message));\r\n      }, 5000);\r\n      return newAlerts;\r\n    });\r\n  }, []);\r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n    let intervalId;\r\n    if (gameStarted) {\r\n      intervalId = setInterval(() => {\r\n        setTimeLeft((prevTime) => prevTime - 1);\r\n      }, 1000);\r\n    }\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [gameStarted]);\r\n\r\n\r\n  const startGame = () => {\r\n    setGameStarted(true);\r\n    \r\n\r\n\r\n    const tickers = Object.keys(dictionaryToUse);\r\n    const randomIndex = Math.floor(Math.random() * tickers.length);\r\n    const randomTicker = tickers[randomIndex];\r\n\r\n    setTicker(randomTicker);\r\n  };\r\n\r\n  const handleNameAnswerChange = (e) => {\r\n    setNameAnswer(e.target.value);\r\n  };\r\n\r\n  const handleCompanyAnswerChange = (e) => {\r\n    setCompanyAnswer(e.target.value);\r\n  };\r\n\r\n  const handleNameAnswerSubmit = (e) => {\r\n    e.preventDefault();\r\n  \r\n    const { symbol, name } = dictionaryToUse[ticker];\r\n  \r\n    if (nameAnswer.toLowerCase() === symbol.toLowerCase()) {\r\n      setScore((prevScore) => prevScore + 1);\r\n      myAlert(`Correct!`);\r\n    } else {\r\n      myAlert(`Incorrect. The ticker for ${name} is ${symbol}.`);\r\n    }\r\n  \r\n    setNameAnswer('');\r\n  \r\n    const tickers = Object.keys(dictionaryToUse);\r\n    const randomIndex = Math.floor(Math.random() * tickers.length);\r\n    const randomTicker = tickers[randomIndex];\r\n  \r\n    setTicker(randomTicker);\r\n  };\r\n  \r\n  const handleCompanyAnswerSubmit = (e) => {\r\n    e.preventDefault();\r\n  \r\n    const { symbol, company } = dictionaryToUse[ticker];\r\n  \r\n    if (companyAnswer.toLowerCase() === symbol.toLowerCase()) {\r\n      setScore((prevScore) => prevScore + 1);\r\n      myAlert(`Correct!`);\r\n    } else {\r\n      myAlert(`Incorrect. The ticker for ${company} is ${symbol}.`);\r\n    }\r\n  \r\n    setCompanyAnswer('');\r\n  \r\n    const tickers = Object.keys(dictionaryToUse);\r\n    const randomIndex = Math.floor(Math.random() * tickers.length);\r\n    const randomTicker = tickers[randomIndex];\r\n  \r\n    setTicker(randomTicker);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    const storedHighScores = JSON.parse(localStorage.getItem('highScores'));\r\n    if (storedHighScores) {\r\n      setHighScores(storedHighScores);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('highScores', JSON.stringify(highScores));\r\n  }, [highScores, gameMode]);\r\n  \r\n\r\n  const updateHighScore = useCallback(() => {\r\n    if (score > highScores[gameMode].score) {\r\n      Swal.fire({\r\n        title: 'Congratulations!',\r\n        html: `<h3>You got a new high score!</h3><h2>${score} points!</h2>`,\r\n        input: 'text',\r\n        icon: 'success',\r\n        inputPlaceholder: 'Enter your name or initials',\r\n        confirmButtonText: 'Submit',\r\n        confirmButtonColor: 'rgb(173, 123, 233)',\r\n        inputAttributes: {\r\n          autocapitalize: 'off',\r\n          autocorrect: 'off',\r\n          autocomplete: 'off',\r\n        },\r\n        showCancelButton: false,\r\n        inputValidator: (value) => {\r\n          if (!value) {\r\n            return 'Please enter your name or initials in the box';\r\n          }\r\n        },\r\n        background:'rgba(0, 0, 0, 0.8)',\r\n        backdrop: `\r\n          rgba(0,0,123,0.4)\r\n        `,\r\n        customClass: {\r\n          title: 'swal-title',\r\n          confirmButton: 'swal-button',\r\n          input: 'swal-input',\r\n          validationMessage: 'swal-validation-message'\r\n        }\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          const initials = result.value;\r\n          setHighScores((prevHighScores) => ({\r\n            ...prevHighScores,\r\n            [gameMode]: { initials, score },\r\n          }));\r\n        }\r\n      });\r\n    } else {\r\n      // Display the score using Swal.fire()\r\n      Swal.fire({\r\n        title: 'Good Try!',\r\n        html: `<h3>Your final score is:</h3><h2>${score} points...</h2>`,\r\n        icon: 'info',\r\n        confirmButtonText: 'OK',\r\n        confirmButtonColor: 'rgb(62, 84, 172)',\r\n        allowOutsideClick: false,\r\n        allowEscapeKey: true,\r\n        allowEnterKey: false,\r\n        showLoaderOnConfirm: true,\r\n        preConfirm: () => {\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n            }, 250); // Add a short delay before closing the alert to give the user a chance to read the message\r\n          });\r\n        },\r\n        background:'rgba(0, 0, 0, 0.8)',\r\n        backdrop: `\r\n          rgba(0,0,123,0.4)\r\n        `,\r\n        customClass: {\r\n          title: 'swal-title',\r\n          confirmButton: 'swal-button',\r\n        }\r\n      });\r\n    }\r\n  }, [score, gameMode, highScores]);\r\n  \r\n\r\n  \r\n  \r\n  \r\n  useEffect(() => {\r\n    const endGame = () => {\r\n      setGameStarted(false);\r\n      updateHighScore();\r\n      setScore(0);\r\n      setTimeLeft(60);\r\n      setTicker('');\r\n      setNameAnswer('');\r\n      setCompanyAnswer('');\r\n    };\r\n  \r\n    if (timeLeft === 0 && ticker !== '') {\r\n      endGame();\r\n    }\r\n  }, [timeLeft, score, setGameStarted, setTimeLeft, setTicker, setNameAnswer, setCompanyAnswer, ticker, gameMode, updateHighScore]);\r\n  \r\n  const HighScores = () => {\r\n    const highScoresList = [\r\n      { name: highScores.name, mode: 'Name' },\r\n      { name: highScores.nameHardMode, mode: 'Name (Hard)' },\r\n      { name: highScores.company, mode: 'Company' },\r\n      { name: highScores.companyHardMode, mode: 'Company (Hard)' },\r\n      { name: highScores.both, mode: 'Both' },\r\n      { name: highScores.bothHardMode, mode: 'Both (Hard)' },\r\n    ];\r\n  \r\n    // Sort high scores in descending order\r\n    highScoresList.sort((a, b) => b.name?.score - a.name?.score);\r\n  \r\n    return (\r\n      <div className=\"high-scores\">\r\n        <h5>High Scores:</h5>\r\n        {highScoresList.map((score) => {\r\n          if (score.name?.score > 0) {\r\n            return (\r\n              <p key={score.mode}>\r\n                {score.mode} â€” {`${score.name?.initials} â€” Score: ${score.name?.score}`}\r\n              </p>\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  \r\n  \r\n\r\n const renderGameModeSelect = () => {\r\n  const handleHardModeChange = (e) => {\r\n    setHardMode(e.target.checked);\r\n    if (gameMode.includes('HardMode')) {\r\n      myAlert('If not properly loading... Please reload the page to select a Game Mode.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Guess the Ticker!</h1>\r\n      <h3>We'll give you the name and/or the company of the coin. Can you guess its Ticker symbol?</h3>\r\n      <h4>Select a GameMode Below!</h4>\r\n      <div className=\"mode-buttons\">\r\n        <button\r\n          className={gameMode === 'name' ? 'selected' : ''}\r\n          onClick={() => setGameMode('name')}\r\n        >\r\n          Name\r\n        </button>\r\n        <button\r\n          className={gameMode === 'company' ? 'selected' : ''}\r\n          onClick={() => setGameMode('company')}\r\n        >\r\n          Company\r\n        </button>\r\n        <button\r\n          className={gameMode === 'both' ? 'selected' : ''}\r\n          onClick={() => setGameMode('both')}\r\n        >\r\n          Both\r\n        </button>\r\n        {hardMode && (\r\n          <>\r\n            <button\r\n              className={gameMode === 'nameHardMode' ? 'selected' : ''}\r\n              onClick={() => setGameMode('nameHardMode')}\r\n            >\r\n              Name (Hard)\r\n            </button>\r\n            <button\r\n              className={gameMode === 'companyHardMode' ? 'selected' : ''}\r\n              onClick={() => setGameMode('companyHardMode')}\r\n            >\r\n              Company (Hard)\r\n            </button>\r\n            <button\r\n              className={gameMode === 'bothHardMode' ? 'selected' : ''}\r\n              onClick={() => setGameMode('bothHardMode')}\r\n            >\r\n              Both (Hard)\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n      <div className=\"hard-mode\">\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"hardMode\"\r\n          checked={hardMode}\r\n          onChange={handleHardModeChange}\r\n        />\r\n        <label htmlFor=\"hardMode\">Too Easy?</label>\r\n      </div>\r\n      <br />\r\n      <button className=\"start-button\" onClick={startGame}>Start</button>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n    \r\n    const renderGame = () => {\r\n      if (!gameMode) {\r\n        return <h6>Please reload the page and select a GameMode!</h6>;\r\n      }\r\n    \r\n      const dictionaryEntry = dictionaryToUse[ticker];\r\n    \r\n      const { name, company } = dictionaryEntry;\r\n    \r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Guess the Ticker!</h1>\r\n  \r\n        {gameMode === 'name' ? (\r\n  <>\r\n    <h6>GameMode: Name</h6>\r\n    <h2>{dictionaryEntry.name}</h2>\r\n    <form onSubmit={handleNameAnswerSubmit}>\r\n      <input type=\"text\" placeholder=\"answer...\" value={nameAnswer} onChange={handleNameAnswerChange} />\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  </>\r\n) : gameMode === 'company' ? (\r\n  <>\r\n    <h6>GameMode: Company</h6>\r\n    <h2>{dictionaryEntry.company}</h2>\r\n    <form onSubmit={handleCompanyAnswerSubmit}>\r\n      <input type=\"text\" placeholder=\"answer...\" value={companyAnswer} onChange={handleCompanyAnswerChange} />\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  </>\r\n) : gameMode === 'both' ? (\r\n  <>\r\n    <h6>GameMode: Both</h6>\r\n    {name.toLowerCase() === company.toLowerCase() ? (\r\n      <div>\r\n        <h2>Name&Company:</h2>\r\n        <h6>{name}</h6>\r\n      </div>\r\n    ) : (\r\n      <>\r\n        <div>\r\n          <h2>Name/Company:</h2>\r\n          <h6>{name} / {company}</h6>\r\n        </div>\r\n      </>\r\n    )}\r\n    <form onSubmit={handleNameAnswerSubmit}>\r\n      <input type=\"text\" placeholder=\"answer...\" value={nameAnswer} onChange={handleNameAnswerChange} />\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  </>\r\n) : hardMode && gameMode === 'nameHardMode' ? (\r\n  <>\r\n    <h6>GameMode: Name (Hard)</h6>\r\n    <h2>{dictionary2[ticker].name}</h2>\r\n    <form onSubmit={handleNameAnswerSubmit}>\r\n      <input type=\"text\" placeholder=\"answer...\" value={nameAnswer} onChange={handleNameAnswerChange} />\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  </>\r\n) : hardMode && gameMode === 'companyHardMode' ? (\r\n  <>\r\n    <h6>GameMode: Company (Hard)</h6>\r\n    <h2>{dictionary2[ticker].company}</h2>\r\n    <form onSubmit={handleCompanyAnswerSubmit}>\r\n      <input type=\"text\" placeholder=\"answer...\" value={companyAnswer} onChange={handleCompanyAnswerChange} />\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  </>\r\n) : hardMode && gameMode === 'bothHardMode' ? (\r\n  <>\r\n    <h6>GameMode: Both (Hard)</h6>\r\n    {dictionary2[ticker].name.toLowerCase() === dictionary2[ticker].company.toLowerCase() ? (\r\n      <div>\r\n        <h2>Name&Company:</h2>\r\n        <h6>{dictionary2[ticker].name}</h6>\r\n      </div>\r\n    ) : (\r\n      <>\r\n        <div>\r\n          <h2>Name/Company:</h2>\r\n          <h6>{dictionary2[ticker].name} / {dictionary2[ticker].company}</h6>\r\n        </div>\r\n      </>\r\n    )}\r\n    <form onSubmit={handleNameAnswerSubmit}>\r\n      <input type=\"text\" placeholder=\"answer...\" value={nameAnswer} onChange={handleNameAnswerChange} />\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  </>\r\n) : null}\r\n\r\n        {gameStarted ? (\r\n          <div>\r\n            <p>Points: {score}</p>\r\n            <p>Time Left: {timeLeft}</p>\r\n          </div>\r\n        ) : null}\r\n\r\n        {alerts.map((message, index) => (\r\n      <div className=\"my-alert\" key={index}>\r\n        {message}\r\n      </div>\r\n    ))}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <div className={gameStarted ? \"game-going\" : \"\"}>\r\n      {gameStarted ? renderGame() : renderGameModeSelect()}\r\n      <HighScores />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}